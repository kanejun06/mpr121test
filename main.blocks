<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="pY(i]ACUB[Jd?nl@IWmf" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="2IvV[qJX^DG@`;6z0BsM"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace MPR121 {" line1="    const MPR121_ADDR = 0x5A" line2="" line3="    // タッチ状態を返す（12ビットのbitmask）" line4="    //% block=&quot;read touch status&quot;" line5="    export function readTouch(): number {" line6="        pins.i2cWriteNumber(MPR121_ADDR, 0x00, NumberFormat.UInt8BE)" line7="        let LSB = pins.i2cReadNumber(MPR121_ADDR, NumberFormat.UInt8BE)" line8="        pins.i2cWriteNumber(MPR121_ADDR, 0x01, NumberFormat.UInt8BE)" line9="        let MSB = pins.i2cReadNumber(MPR121_ADDR, NumberFormat.UInt8BE)" line10="        return (MSB &lt;&lt; 8) | LSB" line11="    }" line12="" line13="    // 特定のキーが押されたかどうか" line14="    //% block=&quot;is key %key touched&quot;" line15="    export function isTouched(key: number): boolean {" line16="        let touched = readTouch()" line17="        return (touched &amp; (1 &lt;&lt; key)) != 0" line18="    }" line19="}" numlines="20"></mutation></block></statement></block></xml>